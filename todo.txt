



        todo:
- fix spawn not actually facing in forward view direction
- Find proper fix for: if (al.n > 4) al.n = 5;
- Take screenshots of strnog specular highlights not showing in clusters before i fix it
  so i can show them in the report

TODO: cone clustering for better specular,
      READ Optimized Phong and Blinn-Phong Glossy Highlights
        Linus Källberg and Thomas Larsson
        Mälardalen University
TODO Idea:
        Only compute diffuse component when in diffuse cluster?
        Only copmute specular component when in specular cluster?
    This could be alright but probably wouldn't save that much.
    But if i have time it could be another good thing to implement.
Anyway the basic idea of using cones for specular clustering is important.

TODO Idea:
	Practical clustered shading talk: avalache engine uses a seperate distant lighting system,
	their game renders to distances of up to 50,000m but their furthest cluster goes to 500m and then they have a seperate system.
   SO....
	Far clusters can have a shit load of lights in them so maybe use a point light approximation for the furthest cluster.














Also need to stress test on massive open plane..
So a small number of lights per pixel, but a vast world
so that the compute shader is stress tested more.

In writeup mention compute shader batch size testing maybe

Talk about implementation trying to utilize boolean vector operations in glsl
- like bvec lessThanEqual(vec x, vec y) and all() functions


Can do writeup in order of implementation if the section headings make that simple:
- glTF pbr renderer with point lights....
- point light clustered shading
- lambertian area lights implementation
- ltc-based area lights
- area lights with cluster shading.


// TODO: Maybe instead of using 3D AABB surface area as upper bound for polygon area,
    // find the polygons plane with the first 3 points (since n >= 3) then project onto 2D
    // and use the 2D AABB (could be a tighter upper bound but more costly cpu side which might be bad)









== TASKS TODAY:
- Profile the compute shader
- Mirror the suntemple scene multiple times so that i can multiple to thousands of lights in the scene
- Also duplicate the area lights algorthimically so they are in the same place relative to the copy.
^Wow i actually did all that in 2 hours
